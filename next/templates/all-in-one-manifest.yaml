# all-in-one-manifests.yaml (最終確定版・固定値バージョン)

# -------------------
# PostgreSQL用 Secret
# -------------------
# 解説: DBのパスワードを安全に管理します。
apiVersion: v1
kind: Secret
metadata:
  # ★リリース名 `tss-pre` に合わせて名前を統一
  name: tss-pre-postgresql
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: postgresql
type: Opaque
stringData:
  # ★キー名は 'password'
  password: "your-super-secret-password" # ここは実際のDBパスワード

---
# -------------------------
# PostgreSQL用 Service
# -------------------------
apiVersion: v1
kind: Service
metadata:
  # ★リリース名 `tss-pre` に合わせて名前を統一
  name: tss-pre-postgresql
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: postgresql
spec:
  type: ClusterIP
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: postgresql

---
# -------------------------
# PostgreSQL用 StatefulSet
# -------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  # ★リリース名 `tss-pre` に合わせて名前を統一
  name: tss-pre-postgresql
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: postgresql
spec:
  replicas: 1
  serviceName: tss-pre-postgresql
  selector:
    matchLabels:
      app.kubernetes.io/instance: tss-pre
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: tss-pre
        app.kubernetes.io/name: postgresql
    spec:
      containers:
        - name: postgresql
          image: "postgres:15"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tss-pre-postgresql
                  key: password
            # .env.localに合わせてユーザー名とDB名を設定
            - name: POSTGRES_USER
              value: "user"
            - name: POSTGRES_DB
              value: "mydatabase"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "local-path"
        resources:
          requests:
            storage: 1Gi

---
# -------------------------
# Next.jsアプリ用 Service
# -------------------------
apiVersion: v1
kind: Service
metadata:
  # ★リリース名 `tss-pre` に合わせて名前を統一
  name: tss-pre-my-nextjs-app
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: my-nextjs-app
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 3000
      name: http
  selector:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: my-nextjs-app

---
# -------------------------
# Next.jsアプリ用 Deployment
# -------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tss-pre-my-nextjs-app
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: my-nextjs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tss-pre
      app.kubernetes.io/name: my-nextjs-app
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: tss-pre
        app.kubernetes.io/name: my-nextjs-app
    spec:

      containers:
        - name: my-nextjs-app
          image: "rnagashiro/my-nextjs-app:d65b5c1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          env:
            # --- データベース接続情報 ---
            - name: PG_USER
              value: "user" # ★ 'postgres' から '.env.local' の 'user' に修正
            - name: PG_DB_NAME
              value: "mydatabase" # ★ 'postgres' から '.env.local' の 'mydatabase' に修正
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tss-pre-postgresql
                  key: password
            - name: DATABASE_URL
              value: "postgresql://$(PG_USER):$(PG_PASSWORD)@tss-pre-postgresql:5432/$(PG_DB_NAME)?schema=public"

            # --- アプリケーション設定 (固定値) ---
            - name: COOKIE_NAME
              value: "session-infopia"
            - name: EMAIL_SERVER_USER
              value: "ainfopiaf6@gmail.com"
            - name: EMAIL_FROM
              value: "ainfopiaf6@gmail.com"
            - name: NEXT_PUBLIC_BASE_URL
              value: "https://infopia.nqg1t0.com"

            # --- アプリケーション設定 (Secretから) ---
            - name: SECRET_COOKIE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-app-secrets
                  key: secret-cookie-password
            - name: EMAIL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-app-secrets
                  key: email-server-password
        - name: prisma-tools
          image: "rnagashiro/my-nextjs-app:d65b5c1" # ★メインアプリと同じイメージを使う
        # このコンテナを起動したままにするためのコマンド
          command: ["/bin/sh", "-c", "tail -f /dev/null"]
          env:
          # ★メインアプリと全く同じDB接続情報を設定する
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: external-db-secret
                  key: database-url
---
# -------------------------
# Ingress
# -------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tss-pre-my-nextjs-app
  namespace: tss-pre
  labels:
    app.kubernetes.io/instance: tss-pre
    app.kubernetes.io/name: my-nextjs-app
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: "nginx"
  rules:
    - host: "infopia.nqg1t0.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tss-pre-my-nextjs-app
                port:
                  number: 80
  tls:
    - hosts:
        - "infopia.nqg1t0.com"
      secretName: my-nextjs-app-tls                  
