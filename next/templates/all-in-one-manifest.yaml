# -------------------
# アプリ用Secret (Cookie/Emailパスワード)
# -------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-app-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
type: Opaque
stringData:
  secret-cookie-password: {{ .Values.app.secretEnv.secretCookiePassword | quote }}
  email-server-password: {{ .Values.app.secretEnv.emailServerPassword | quote }}

---
# -------------------
# PostgreSQL用 Secret (DBパスワード)
# -------------------
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: postgresql
type: Opaque
stringData:
  password: {{ .Values.postgresql.auth.password | quote }}

---
# -------------------------
# PostgreSQL用 Service
# -------------------------
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: postgresql
spec:
  type: ClusterIP
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: postgresql

---
# -------------------------
# PostgreSQL用 StatefulSet
# -------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: postgresql
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-postgresql
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: postgresql
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.image | quote }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.postgresql.storage.storageClassName | quote }}
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size | quote }}

---
# -------------------------
# Next.jsアプリ用 Service
# -------------------------
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-my-nextjs-app
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: my-nextjs-app
spec:
  type: {{ .Values.service.type | quote }}
  ports:
    - port: 80
      targetPort: {{ .Values.service.port }}
      name: http
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: my-nextjs-app

---
# -------------------------
# Next.jsアプリ用 Deployment
# -------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-my-nextjs-app
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: my-nextjs-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: my-nextjs-app
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: my-nextjs-app
    spec:
      containers:
        - name: my-nextjs-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            # --- データベース接続情報 ---
            - name: PG_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: PG_DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
            - name: DATABASE_URL
              value: "postgresql://$(PG_USER):$(PG_PASSWORD)@{{ .Release.Name }}-postgresql:5432/$(PG_DB_NAME)?schema=public"
            
            # --- アプリケーション設定 (values.yamlから) ---
            - name: COOKIE_NAME
              value: {{ .Values.app.env.cookieName | quote }}
            - name: EMAIL_SERVER_USER
              value: {{ .Values.app.env.emailServerUser | quote }}
            - name: EMAIL_FROM
              value: {{ .Values.app.env.emailFrom | quote }}
            - name: NEXT_PUBLIC_BASE_URL
              value: {{ .Values.app.env.nextPublicBaseUrl | quote }}
              
            # --- アプリケーション設定 (app-secretsから) ---
            - name: SECRET_COOKIE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secrets
                  key: secret-cookie-password
            - name: EMAIL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-app-secrets
                  key: email-server-password

---
# -------------------------
# Ingress
# -------------------------
{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-my-nextjs-app
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: my-nextjs-app
  annotations:
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
spec:
  ingressClassName: {{ .Values.ingress.className | quote }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Release.Name }}-my-nextjs-app
                port:
                  number: 80
          {{- end }}
    {{- end }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
{{- end }}

---
# -------------------------
# DBマイグレーションJob (ArgoCD PreSyncフック)
# -------------------------
{{- if .Values.migration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migrate-job-