{{- if .Values.migration.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  # ★ 1. Job名にイメージタグを含めてユニークにする
  name: {{ .Release.Name }}-migrate-job-{{ .Values.image.tag }}
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    # ★ 2. ArgoCDのPreSyncフックに変更
    "argocd.argoproj.io/hook": PreSync
    # ★ 3. 成功したら自動削除
    "argocd.argoproj.io/hook-delete-policy": HookSucceeded
spec:
  template:
    metadata:
      labels:
        # JobのPodを識別するためのラベル
        app: {{ .Release.Name }}
        task: migrate
    spec:
      restartPolicy: Never
      containers:
        - name: migrate
          image: "{{ .Values.migration.image.repository | default .Values.image.repository }}:{{ .Values.image.tag }}{{ .Values.migration.image.tagSuffix }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          
          # ★ 4. コマンドを values.yaml から参照
          command: {{ .Values.migration.command | toYaml | nindent 12 }}

          env:
            # ★ 5. DATABASE_URLをここで定義
            - name: DATABASE_URL
              value: "postgresql://$(PG_USER):$(PG_PASSWORD)@{{ .Release.Name }}-postgresql:5432/$(PG_DB_NAME)?schema=public"
            # --- DB接続情報 ---
            - name: PG_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: PG_DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: password
  backoffLimit: 1
{{- end }}